[{"C:\\programavimas\\redroomweb\\src\\index.js":"1","C:\\programavimas\\redroomweb\\src\\App.js":"2","C:\\programavimas\\redroomweb\\src\\components\\BcAndLanguages.component.js":"3","C:\\programavimas\\redroomweb\\src\\components\\Footer.component.js":"4","C:\\programavimas\\redroomweb\\src\\components\\StickyFooter.component.js":"5","C:\\programavimas\\redroomweb\\src\\components\\Header.component.js":"6","C:\\programavimas\\redroomweb\\src\\components\\Routes.component.js":"7","C:\\programavimas\\redroomweb\\src\\components\\MainPage.component.js":"8","C:\\programavimas\\redroomweb\\src\\components\\ProductPage.component.js":"9","C:\\programavimas\\redroomweb\\src\\components\\Contacts.component.js":"10","C:\\programavimas\\redroomweb\\src\\components\\Manufacturers.component.js":"11","C:\\programavimas\\redroomweb\\src\\components\\AllProducts.component.js":"12","C:\\programavimas\\redroomweb\\src\\components\\Interior.component.js":"13","C:\\programavimas\\redroomweb\\src\\components\\Inquire.component.js":"14"},{"size":207,"mtime":1613382063950,"results":"15","hashOfConfig":"16"},{"size":1168,"mtime":1613382063938,"results":"17","hashOfConfig":"16"},{"size":6937,"mtime":1613382063940,"results":"18","hashOfConfig":"16"},{"size":554,"mtime":1613382063941,"results":"19","hashOfConfig":"16"},{"size":995,"mtime":1613382063946,"results":"20","hashOfConfig":"16"},{"size":22080,"mtime":1613412850083,"results":"21","hashOfConfig":"16"},{"size":2485,"mtime":1613382063945,"results":"22","hashOfConfig":"16"},{"size":2519,"mtime":1613412772730,"results":"23","hashOfConfig":"16"},{"size":8618,"mtime":1613382063945,"results":"24","hashOfConfig":"16"},{"size":1110,"mtime":1613382063940,"results":"25","hashOfConfig":"16"},{"size":2273,"mtime":1613382063944,"results":"26","hashOfConfig":"16"},{"size":30447,"mtime":1613382063939,"results":"27","hashOfConfig":"16"},{"size":1799,"mtime":1613382063942,"results":"28","hashOfConfig":"16"},{"size":3040,"mtime":1613382063942,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"xnqdvg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\programavimas\\redroomweb\\src\\index.js",[],["63","64"],"C:\\programavimas\\redroomweb\\src\\App.js",[],"C:\\programavimas\\redroomweb\\src\\components\\BcAndLanguages.component.js",["65"],"import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nconst BcAndLanguages = (props) => {\r\n    const location = useLocation();\r\n    var modifiedPathname = [];\r\n\r\n    // if any location is present ( [0] is always /, so im checking the 1st element), e.g. /lt or /en\r\n    if (location.pathname[1] !== undefined)\r\n        if (location.pathname[1].toUpperCase() + location.pathname[2].toUpperCase() === \"LT\" || location.pathname[1].toUpperCase() + location.pathname[2].toUpperCase() === \"EN\")\r\n            props.setLanguage(location.pathname[1].toUpperCase() + location.pathname[2].toUpperCase())\r\n\r\n    // if breadcrumbs are longer than PAGRINDINIS/*PAGE*\r\n    // example: PAGRINDINIS/*PAGE*/*CRITERIA*\r\n    // 0th element is nonexistent because the string starts with /\r\n\r\n    for (let i = location.pathname.split(\"/\").length - 1; i > 0; i--)\r\n        modifiedPathname[i - 2] = (location.pathname.split(\"/\")[i]);\r\n\r\n\r\n    var pathnameWO = \"\";\r\n    for (let i = 3; i < location.pathname.length; i++)\r\n        pathnameWO += location.pathname[i];\r\n\r\n\r\n    // remove empty strings \r\n    modifiedPathname = modifiedPathname.filter(el => el !== \"\");\r\n    modifiedPathname = modifiedPathname.filter(el => el !== \"undefined\" && el !== undefined);\r\n    modifiedPathname = modifiedPathname.filter(el => el !== \"null\" && el !== null);\r\n\r\n    var untranslatedPathname = [modifiedPathname[0], modifiedPathname[1]];\r\n    // translation of the second word in the breadcrumbs\r\n    if (props.language === \"LT\" && modifiedPathname[0] !== undefined)\r\n        switch (modifiedPathname[0].toUpperCase()) {\r\n            case \"CONTACTS\":\r\n                modifiedPathname[0] = \"KONTAKTAI\";\r\n                break;\r\n\r\n            case \"MANUFACTURERS\":\r\n                modifiedPathname[0] = \"GAMINTOJAI\";\r\n                break;\r\n\r\n            case \"INTERIOR\":\r\n                modifiedPathname[0] = \"INTERJERAS\";\r\n                break;\r\n\r\n            case \"PRODUCTS\":\r\n                modifiedPathname[0] = \"PRODUKTAI\";\r\n                break;\r\n            \r\n            case \"INQUIRE\":\r\n                modifiedPathname[0] = \"SIŲSTI UŽKLAUSĄ\";\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    // translation of the third word in the breadcrumbs\r\n    if (props.language === \"LT\" && modifiedPathname[1] !== undefined)\r\n        switch (modifiedPathname[1].toUpperCase()) {\r\n            case \"SALON FURNITURE SYSTEMS\":\r\n                modifiedPathname[1] = \"SVETAINĖS IR TV BALDŲ SISTEMOS\";\r\n                break;\r\n\r\n            case \"WORKPLACE FURNITURE\":\r\n                modifiedPathname[1] = \"DARBO VIETOS\";\r\n                break;\r\n\r\n            case \"INTERIOR\":\r\n                modifiedPathname[1] = \"INTERJERAS\";\r\n                break;\r\n\r\n            case \"BOOKSHELVES\":\r\n                modifiedPathname[1] = \"KNYGŲ LENTYNOS\";\r\n                break;\r\n\r\n            case \"BED\":\r\n                modifiedPathname[1] = \"LOVOS\";\r\n                break;\r\n\r\n            case \"DINING ROOM FURNITURE\":\r\n                modifiedPathname[1] = \"VALGOMOJO BALDAI\";\r\n                break;\r\n\r\n            case \"BEDROOM FURNITURE\":\r\n                modifiedPathname[1] = \"MIEGAMOJO BALDAI\";\r\n                break;\r\n\r\n            case \"OUTDOOR FURNITURE AND ACCESSORIES\":\r\n                modifiedPathname[1] = \"LAUKO BALDAI IR AKSESUARAI\";\r\n                break;\r\n\r\n\r\n            case \"DINING ROOM FURNITURE\":\r\n                modifiedPathname[1] = \"SVETAINĖS IR VALGOMOJO BALDAI\";\r\n                break;\r\n\r\n            case \"DAY SYSTEMS\":\r\n                modifiedPathname[1] = \"DIENOS SISTEMOS\";\r\n                break;\r\n\r\n\r\n\r\n            case \"WARDROBE SYSTEMS\":\r\n                modifiedPathname[1] = \"SPINTŲ SISTEMOS\";\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    return (\r\n\r\n        <ul style={{ background: \"transparent\" }} id=\"bcnl-container\">\r\n            <div id=\"breadcrumbs-links\">\r\n                <Link to={\"/\" + props.language} style={{ paddingLeft: '1rem', transition: '0.55s', cursor: 'pointer', fontFamily: 'Roboto', color: ' rgba(0, 0, 0, 0.7501)' }}>\r\n                    {/* kalba == lt? pagrindinis: main */}\r\n                    {props.language === \"LT\" ? \"PAGRINDINIS\" : \"MAIN\"}\r\n                </Link>\r\n\r\n                {/* length is > 0 when at least one item is present. the item starts at index 0, therefore untranslatedPathname[0] is required */}\r\n                {modifiedPathname.length > 0 &&\r\n                    <>\r\n                        <span style={{ color: 'rgba(0, 0, 0, 0.7501)' }}>/</span>\r\n                        <Link to={\"/\" + props.language + \"/\" + untranslatedPathname[0]} style={{ transition: '0.55s', cursor: 'pointer', fontFamily: 'Roboto', color: ' rgba(0, 0, 0, 0.7501)', textTransform: 'uppercase' }}>\r\n                            {modifiedPathname[0]}\r\n                        </Link>\r\n                    </>\r\n                }\r\n\r\n\r\n\r\n                {modifiedPathname.length > 1 && modifiedPathname[1] !== \"null\" && modifiedPathname[1] !== \"undefined\" &&\r\n                    <>\r\n                        <span style={{ color: 'rgba(0, 0, 0, 0.7501)' }}>/</span>\r\n                        <Link to={location.pathname.split(untranslatedPathname[1])[0] + untranslatedPathname[1]} style={{ transition: '0.55s', cursor: 'pointer', fontFamily: 'Roboto', color: 'rgba(0, 0, 0, 0.7501)', textTransform: 'uppercase' }}>\r\n                            {modifiedPathname[1]}\r\n                        </Link>\r\n                    </>\r\n                }\r\n\r\n            </div>\r\n\r\n            <div id=\"lang-container\">\r\n\r\n\r\n                <div>\r\n                </div>\r\n\r\n                {props.language === \"LT\" ?\r\n                    <>\r\n                        <Link to={\"/LT\" + pathnameWO} onClick={() => props.setLanguage(\"LT\")} style={{ fontFamily: 'Roboto', fontWeight: 'bold', color: ' rgba(0, 0, 0, 0.7501)' }}>\r\n                            LT\r\n                        </Link>\r\n\r\n                        <Link to={\"/EN\" + pathnameWO} onClick={() => props.setLanguage(\"EN\")} style={{ fontFamily: 'Roboto', color: ' rgba(0, 0, 0, 0.7501)' }}>\r\n                            EN\r\n                        </Link>\r\n                    </>\r\n                    : props.language === \"EN\" &&\r\n                    <>\r\n\r\n                        <Link to={\"/LT\" + pathnameWO} onClick={() => props.setLanguage(\"LT\")} style={{ fontFamily: 'Roboto', color: ' rgba(0, 0, 0, 0.7501)' }}>\r\n                            LT\r\n            </Link>\r\n\r\n\r\n                        <Link to={\"/EN\" + pathnameWO} onClick={() => props.setLanguage(\"EN\")} style={{ fontFamily: 'Roboto', color: 'black', fontWeight: ' rgba(0, 0, 0, 0.7501)', }}>\r\n                            EN\r\n        </Link>\r\n                    </>\r\n\r\n                }\r\n            </div>\r\n        </ul >\r\n    );\r\n}\r\n\r\nexport default BcAndLanguages;\r\n","C:\\programavimas\\redroomweb\\src\\components\\Footer.component.js",[],"C:\\programavimas\\redroomweb\\src\\components\\StickyFooter.component.js",[],"C:\\programavimas\\redroomweb\\src\\components\\Header.component.js",["66"],"C:\\programavimas\\redroomweb\\src\\components\\Routes.component.js",[],"C:\\programavimas\\redroomweb\\src\\components\\MainPage.component.js",["67"],"C:\\programavimas\\redroomweb\\src\\components\\ProductPage.component.js",["68","69","70","71","72"],"import React, { Component } from \"react\";\r\nimport Products from '../components/products';\r\n\r\n\r\nexport default class ProductPage extends Component {\r\n        constructor(props) {\r\n                super(props)\r\n\r\n                this.state = {\r\n                        imageName: ['none'],\r\n                        info: [],\r\n                        path: undefined,\r\n                        loading: true\r\n                }\r\n        }\r\n\r\n        componentDidMount() {\r\n                if (this.props.location.product) {\r\n                        // console.log('cache exists, no data from the database is necessary')\r\n                        this.setState(\r\n                                {\r\n                                        manufacturer: this.props.location.product.manufacturer,\r\n                                        name: this.props.location.product.name,\r\n                                        imageName: this.props.location.product.imageName,\r\n                                        info: this.props.location.product.info,\r\n                                        path: \"/images/products/\" + this.props.location.product.manufacturer + '/' + this.props.location.product.name + '/',\r\n                                },\r\n                                this.setState({\r\n                                        loading: false,\r\n                                })\r\n                        );\r\n                }\r\n                else {\r\n                        // maybe state.product = product.find... would be simpler instead of state.manuf, state.name \r\n                        var productFromJson = Products.find(el => el.name === this.props.match.params.name && el.manufacturer === this.props.match.params.manufacturer);\r\n\r\n\r\n                        this.setState({\r\n                                manufacturer: productFromJson.manufacturer,\r\n                                name: productFromJson.name,\r\n                                imageName: productFromJson.imageName,\r\n                                info: productFromJson.info,\r\n                                path: \"/images/products/\" + this.props.match.params.manufacturer + '/' + this.props.match.params.name + '/',\r\n\r\n                        },\r\n                                this.setState({\r\n                                        loading: false,\r\n                                })\r\n                        )\r\n                }\r\n\r\n        }\r\n\r\n\r\n        // imageExists(imageurl) {\r\n        //         var http = new XMLHttpRequest();\r\n\r\n        //         http.open('HEAD', imageurl, false);\r\n        //         http.send();\r\n        //         // dukart alertina kazkodel\r\n        //         // alert(imageurl)\r\n        //         if (http.status !== 200)\r\n        //                 console.log(imageurl)\r\n        //         // alert(http.status + imageurl)\r\n        //         return http.status !== 404;\r\n\r\n        // }\r\n\r\n        swapImages(target) {\r\n                // if the click was on one of the side images and main picture is defined or not null (loaded in general)\r\n                if (target.id === \"img1\" || target.id === 'img2' && document.getElementById('main-product-image') !== undefined && document.getElementById('main-product-image') !== null) {\r\n\r\n                        let temp = document.getElementById('main-product-image').src;\r\n                        document.getElementById('main-product-image').src = target.src;\r\n                        target.src = temp;\r\n                }\r\n        }\r\n        render() {\r\n                var i = 0;\r\n                // useeeffect reikia.\r\n\r\n                return (\r\n                        <div style={{ paddingTop: '1rem', paddingBottom: '18rem', minHeight: 'inherit' }} >\r\n                                <div id=\"product-page-grid\">\r\n\r\n                                        <p id=\"product-text\">{this.props.match.params.lang === \"LT\" ? this.state.info[0] : this.props.match.params.lang === \"EN\" && this.state.info[1]}</p>\r\n\r\n                                        {/* <div id='big-container' style={{height: '33rem', width: 'auto'}}>\r\n\r\n                                                <div style={{maxHeight: 'inherit', width: 'inherit', textAlign: 'center', height: 'inherit'}} id=\"prod-photo-container\">\r\n\r\n                                                        {!this.state.loading && <img id=\"main-product-img\"  width={300} height={200} src={this.state.path + this.state.imageName[i]} style={{ width: '100%', height: 'auto', maxHeight: 'inherit', fontSize: '0' }} alt=\"main-product-photo\" />}\r\n\r\n\r\n                                                        <p style={{position: 'relative', zIndex: '9999'}} id=\"product-name\"><b>{this.state.manufacturer}</b> {this.state.name}</p>\r\n                                                </div>\r\n                                        </div> */}\r\n\r\n                                        {/* used to be30 */}\r\n                                        <div style={{ maxWidth: '100%', maxHeight: '100%', height: '23rem' }}>\r\n\r\n                                                <div style={{ height: 'inherit', textAlign: 'center', maxWidth: 'inherit', maxHeight: 'inherit' }} id=\"container-1\">\r\n\r\n                                                        {!this.state.loading && <img id=\"main-product-image\" src={this.state.path + this.state.imageName[i]} style={{ maxHeight: 'inherit', minWidth: 'inherit', width: 'inherit', minHeight: '48%', fontSize: '0' }} alt=\"main-product-photo\" />}\r\n\r\n\r\n\r\n                                                </div>\r\n                                                <p style={{ textAlign: 'CENTER', position: 'relative', marginTop: '2rem', zIndex: '9999' }} id=\"product-name\"><b>{this.state.manufacturer}</b> {this.state.name}</p>\r\n                                        </div>\r\n\r\n                                        {/* 23 rem because mainproductphoto container has a height of 23rem */}\r\n                                        <div id=\"addit-photo-container\" style={{ width: '100%', maxWidth: '100%', overflow: 'hidden', display: 'grid', height: '23rem' }}>\r\n\r\n                                                {!this.state.loading &&\r\n                                                        this.state.imageName.map(() => {\r\n                                                                i++;\r\n\r\n\r\n                                                                if (this.state.imageName[i] !== undefined)\r\n                                                                        return (\r\n                                                                                <div id=\"asd\">\r\n                                                                                        <img\r\n                                                                                                style={{ maxWidth: '100%', cursor: 'pointer', fontSize: '0', margin: '0 auto' }}\r\n                                                                                                onClick={(e) => this.swapImages(e.target)} src={this.state.path + this.state.imageName[i]} id={'img' + i} alt={this.state.imageName[i] + \"-additional-photo\"} />\r\n                                                                                </div>\r\n                                                                        );\r\n                                                                // if there arent enough additionla photos, the grid would portray them improperly therefore an empty picture seems like a decent solution\r\n                                                                // 3 because max 3 photos and it starts from 0\r\n                                                                else if (i !== 3)\r\n                                                                        return (\r\n                                                                                <div id=\"asd\">\r\n                                                                                        {console.log('123')}\r\n\r\n                                                                                        <img style={{ opacity: '0', height: 'inherit', maxWidth: '100%', cursor: 'pointer', fontSize: '0', margin: '0 auto' }} ></img>\r\n                                                                                </div>\r\n                                                                        );\r\n\r\n                                                        })}\r\n\r\n                                        </div>\r\n\r\n                                </div>\r\n                        </div >\r\n                );\r\n\r\n\r\n        }\r\n\r\n}\r\n\r\n","C:\\programavimas\\redroomweb\\src\\components\\Contacts.component.js",[],"C:\\programavimas\\redroomweb\\src\\components\\Manufacturers.component.js",[],"C:\\programavimas\\redroomweb\\src\\components\\AllProducts.component.js",[],"C:\\programavimas\\redroomweb\\src\\components\\Interior.component.js",["73","74"],"import React from \"react\";\r\n\r\nfunction importAll(r) {\r\n        return r.keys().map(r);\r\n}\r\n\r\nconst images = importAll(require.context('../../public/images/interior', false, /\\.(jpg|bmp|ico|png|jpe?g|svg)$/));\r\n\r\nconst enlargeImage = (imgSrc) => {\r\n        if ( document.getElementById(\"background-container\") !== undefined)\r\n        {\r\n                console.log(document.getElementById(\"background-container\"))\r\n                document.getElementById(\"background-container\").classList.toggle(\"display-none\");\r\n                document.getElementById(\"enlarged-img\").src = imgSrc;\r\n\r\n        }\r\n}\r\n\r\nconst Interior = () => {\r\n        return (\r\n                < div style={{ minHeight: 'inherit' }}>\r\n                        <div style={{cursor: 'pointer'}} onClick={() => document.getElementById(\"background-container\").classList.toggle(\"display-none\")} class=\"display-none\" id=\"background-container\">\r\n                                <div id=\"background-container-2\">\r\n                                <img id=\"enlarged-img\" src=\"https://i.ytimg.com/vi/MPV2METPeJU/maxresdefault.jpg\"/>\r\n                                </div>\r\n\r\n                        </div>\r\n                        <div id=\"interior-container\" style={{ paddingBottom: '12rem' }}>\r\n                                {\r\n                                        images.map(element => {\r\n                                                return (\r\n                                                        <img style={{cursor: 'pointer'}} onClick={(e) => enlargeImage(e.target.src)} src={element.default} />\r\n                                                )\r\n                                        })\r\n                                }\r\n                        </div>\r\n                </div >\r\n        );\r\n}\r\n\r\nexport default Interior;","C:\\programavimas\\redroomweb\\src\\components\\Inquire.component.js",["75","76"],"import React, { Component } from 'react';\r\nimport * as emailjs from 'emailjs-com';\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n\r\nclass Inquire extends Component {\r\n    state = {\r\n        email: '',\r\n        message: '',\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let templateParams = {\r\n            from_name: this.state.email,\r\n            to_name: 'jonas.girdzijauskas@gmail.com',\r\n            message: this.state.message,\r\n        }\r\n\r\n        emailjs.send(\r\n            'service_ndv2e3o',\r\n            'template_f4hsl36',\r\n            templateParams,\r\n            'user_6JdN9Zns1wIN50N8dUi13'\r\n        )\r\n        this.resetForm()\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            email: '',\r\n            message: '',\r\n        })\r\n    }\r\n\r\n    handleChange = (param, e) => {\r\n        this.setState({ [param]: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{height: 'inherit'}}>\r\n                <div id=\"inquire-container\">\r\n                <h1 id=\"heading1\" className=\"p-heading1\">{this.props.match.params.lang === \"LT\" ? \"Susisiekime\" : this.props.match.params.lang === \"EN\" && \"Get in Touch\"}</h1>\r\n              \r\n                <Form style={{marginTop: '3rem'}} onSubmit={this.handleSubmit.bind(this)}>\r\n                    <FormGroup style={{marginTop: '3rem'}}controlId=\"formBasicEmail\">\r\n                        <Input id=\"email-box\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            className=\"text-primary\"\r\n                            onChange={this.handleChange.bind(this, 'email')}\r\n                            placeholder={this.props.match.params.lang === \"LT\" ? \"Jūsų el. paštas\" : this.props.match.params.lang === \"EN\" && \"Your email\"}\r\n                        />\r\n                    </FormGroup>\r\n\r\n\r\n                    <FormGroup style={{marginTop: '3rem'}} controlId=\"formBasicMessage\">\r\n                        {/* <Label className=\"text-muted\">{this.props.match.params.lang === \"LT\" ? \"Žinutė\" : this.props.match.params.lang === \"EN\" && \"Message\"}<br/></Label> */}\r\n                        <Input id=\"input-box\"\r\n                            type=\"textarea\"\r\n                            name=\"message\"\r\n                            className=\"text-primary\"\r\n                            value={this.state.message}\r\n                            onChange={this.handleChange.bind(this, 'message')}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <Button style={{borderRadius: '5px',width: '7rem', fontSize: '1.2rem',height: '2.2rem'}}variant=\"primary\" type=\"submit\">\r\n                    {this.props.match.params.lang === \"LT\" ? \"Siųsti\" : this.props.match.params.lang === \"EN\" && \"Send\"}\r\n              </Button>\r\n                </Form>\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Inquire;",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":95,"column":13,"nodeType":"83","messageId":"84","endLine":97,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":444,"column":131,"nodeType":"87","endLine":444,"endColumn":146},{"ruleId":"88","severity":1,"message":"89","line":39,"column":25,"nodeType":"90","endLine":39,"endColumn":85},{"ruleId":"91","severity":1,"message":"92","line":71,"column":42,"nodeType":"93","messageId":"94","endLine":71,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":71,"column":129,"nodeType":"93","messageId":"94","endLine":71,"endColumn":131},{"ruleId":"95","severity":1,"message":"96","line":104,"column":81,"nodeType":"90","endLine":104,"endColumn":290},{"ruleId":"97","severity":1,"message":"98","line":116,"column":85,"nodeType":"99","messageId":"100","endLine":116,"endColumn":87},{"ruleId":"88","severity":1,"message":"89","line":135,"column":89,"nodeType":"90","endLine":135,"endColumn":209},{"ruleId":"88","severity":1,"message":"89","line":24,"column":33,"nodeType":"90","endLine":24,"endColumn":116},{"ruleId":"88","severity":1,"message":"89","line":32,"column":57,"nodeType":"90","endLine":32,"endColumn":158},{"ruleId":"101","severity":1,"message":"102","line":3,"column":18,"nodeType":"103","messageId":"104","endLine":3,"endColumn":30},{"ruleId":"101","severity":1,"message":"105","line":3,"column":49,"nodeType":"103","messageId":"104","endLine":3,"endColumn":54},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'FormFeedback' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]