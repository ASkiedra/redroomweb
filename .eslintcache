[{"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\index.js":"1","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\App.js":"2","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Footer.component.js":"3","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\BcAndLanguages.component.js":"4","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Routes.component.js":"5","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Manufacturers.component.js":"6","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Contacts.component.js":"7","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Interior.component.js":"8","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Header.component.js":"9","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\MainContainer.component.js":"10","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\AllProducts.component.js":"11","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\ProductPage.component.js":"12"},{"size":197,"mtime":1611487657597,"results":"13","hashOfConfig":"14"},{"size":866,"mtime":1611782661968,"results":"15","hashOfConfig":"14"},{"size":1790,"mtime":1611693684618,"results":"16","hashOfConfig":"14"},{"size":6167,"mtime":1611783666865,"results":"17","hashOfConfig":"14"},{"size":2747,"mtime":1611782445255,"results":"18","hashOfConfig":"14"},{"size":2214,"mtime":1611783712614,"results":"19","hashOfConfig":"14"},{"size":1139,"mtime":1611433701525,"results":"20","hashOfConfig":"14"},{"size":220,"mtime":1611487585942,"results":"21","hashOfConfig":"14"},{"size":10017,"mtime":1611763840333,"results":"22","hashOfConfig":"14"},{"size":761,"mtime":1611783749838,"results":"23","hashOfConfig":"14"},{"size":9607,"mtime":1611774797052,"results":"24","hashOfConfig":"14"},{"size":3590,"mtime":1611781468584,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"grcwhv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\index.js",[],["54","55"],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\App.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Footer.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\BcAndLanguages.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Routes.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Manufacturers.component.js",["56"],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Contacts.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Interior.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Header.component.js",["57"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from './Logo-V4.png';\r\n\r\nconst Header = (props) => {\r\n    /* pervadint i Products ProductsMenu */\r\n    const ProductsMenu = () => {\r\n        console.log(window.innerHeight)\r\n        return (\r\n            <div id=\"produktai\" style={{ height: \"inherit\" }} >\r\n                {/* OPENED */}\r\n                { openedProductsDropdown &&\r\n                    <div style={{ cursor: 'pointer', height: \"inherit\" }} onClick={() => { setOPD(false) }}>\r\n                        <div style={{ height: \"inherit\" }}>\r\n                            <p id=\"produktai\" style={{ height: 'calc(100% - 1.8rem)' }} className=\"header-item-onhover\">\r\n                                {\r\n                                    props.language === \"LT\" ? \"PRODUKTAI\" :\r\n                                        props.language === \"EN\" && \"PRODUCTS\"\r\n                                }\r\n                            </p>\r\n                            <DropdownMenu />\r\n                        </div>\r\n                    </div>}\r\n\r\n\r\n                {/* CLOSED */}\r\n                { !openedProductsDropdown &&\r\n                    <div style={{ cursor: 'pointer', height: \"inherit\" }} onClick={() => { setOPD(true) }}>\r\n                        <p id=\"produktai\" style={{ height: 'calc(100% - 1.8rem)' }} className=\"header-item-onhover\">\r\n                            {\r\n                                props.language === \"LT\" ? \"PRODUKTAI\" :\r\n                                    props.language === \"EN\" && \"PRODUCTS\"\r\n                            }</p>\r\n\r\n                    </div>}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    // need more dropdown levels? 11:40 https://www.youtube.com/watch?v=IF6k0uZuypA\r\n    const DropdownMenu = () => {\r\n        function DropdownItem(props) {\r\n            return props.children;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            // could have used `:` instead of `props.language === \"EN\"` but this seems more stable\r\n            <ul className=\"dropdown\" >\r\n                <DropdownItem>\r\n                    <li style={{ textTransform: 'uppercase', fontWeight: \"550\", backgroundColor: 'rgba(0, 0, 0, 0.83)', color: 'white' }} >\r\n                        {/* heading text */}\r\n                        <Link to={\"/\" + props.language + \"/products/day systems\"}\r\n                            style={{ color: 'white', paddingTop: '0', paddingBottom: '0.5rem' }} to={\"/\" + props.language + \"/products/day systems\"}                        >\r\n                            {\r\n                                props.language === \"LT\" ? \"DIENOS SISTEMOS\" :\r\n                                    props.language === \"EN\" && \"DAY SYSTEMS\"\r\n                            }\r\n                        </Link>\r\n\r\n                        <ul style={{ width: '100%', marginTop: '0.5rem', paddingLeft: '1rem', listStyle: 'none' }}>\r\n                            <div>\r\n                                <Link to={\"/\" + props.language + \"/products//salon furniture systems\"}\r\n                                    className=\"dropdown-subtext\">\r\n                                    {\r\n                                        props.language === \"LT\" ? \"SVETAINĖS IR TV BALDŲ SISTEMOS\" :\r\n                                            props.language === \"EN\" && \"SALON FURNITURE SYSTEMS\"\r\n                                    }\r\n\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Link to={\"/\" + props.language + \"/products//workplace furniture\"} className=\"dropdown-subtext\" >\r\n                                    {\r\n                                        props.language === \"LT\" ? \"DARBO VIETOS\" :\r\n                                            props.language === \"EN\" && \"WORKPLACE FURNITURE\"\r\n                                    }\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Link to={\"/\" + props.language + \"/products//bookshelves\"} className=\"dropdown-subtext\" >\r\n                                    {\r\n                                        props.language === \"LT\" ? \"KNYGŲ LENTYNOS\" :\r\n                                            props.language === \"EN\" && \"BOOKSHELVES\"\r\n                                    }\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </ul>\r\n                    </li>\r\n                </DropdownItem>\r\n\r\n\r\n                <DropdownItem>\r\n                    <li style={{ textTransform: 'uppercase', fontWeight: \"550\", backgroundColor: 'rgba(0, 0, 0, 0.83)', color: 'white' }} >\r\n                        {/* heading text */}\r\n                        <Link style={{ color: 'white', paddingTop: '0', paddingBottom: '0.5rem' }} to=\"/\">\r\n                            {\r\n                                props.language === \"LT\" ? \"NAKTIES SISTEMOS 25\" :\r\n                                    props.language === \"EN\" && \"NIGHT SYSTEMS 25\"\r\n                            }\r\n                        </Link>\r\n\r\n                        <ul style={{ width: '100%', marginTop: '0.5rem', paddingLeft: '1rem', listStyle: 'none' }}>\r\n                            <div>\r\n                                <Link className=\"dropdown-subtext\">\r\n                                    {\r\n                                        props.language === \"LT\" ? \"SOFOS IR TV BALDŲ SISTEMOS 20\" :\r\n                                            props.language === \"EN\" && \"SOFA AND TV FURNITURE SYSTEMS 20\"\r\n                                    }\r\n                                </Link>\r\n                            </div>\r\n                        </ul>\r\n                    </li>\r\n                </DropdownItem>\r\n\r\n\r\n                <DropdownItem>\r\n                    <Link to=\"/\" >\r\n                        <li style={{ color: 'white', textTransform: 'uppercase', fontWeight: \"550\", backgroundColor: 'rgba(0, 0, 0, 0.83)' }} >\r\n                            <Link style={{ color: 'white', paddingTop: '0', paddingBottom: '0.5rem' }} to=\"/\">\r\n                                {\r\n                                    props.language === \"LT\" ? \"LUXURY GAMINTOJAI 30\" :\r\n                                        props.language === \"EN\" && \"LUXURY MANUFACTURERS 30\"\r\n                                }\r\n                            </Link>\r\n                        </li>\r\n                    </Link>\r\n                </DropdownItem>\r\n\r\n\r\n\r\n                <DropdownItem>\r\n                    <Link to={\"/\" + props.language + \"/products\"} >\r\n                        <li style={{ color: 'white', textTransform: 'uppercase', fontWeight: \"550\", backgroundColor: 'rgba(0, 0, 0, 0.83)' }} >\r\n                            <Link style={{ fontWeight: 'bold', color: 'white', paddingTop: '0', paddingBottom: '0.5rem' }} to={\"/\" + props.language + \"/products\"}>\r\n                                {\r\n                                    props.language === \"LT\" ? \"VISI GAMINTOJAI\" :\r\n                                        props.language === \"EN\" && \"ALL MANUFACTURERS\"\r\n                                }                                </Link>\r\n                        </li>\r\n                    </Link>\r\n                </DropdownItem>\r\n\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    // HIDE-SHOW DROPDOWNS\r\n    const [openedProductsDropdown, setOPD] = useState(false);\r\n\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        function handleKeyPress(event) {\r\n            if (event.key === 'Escape') {\r\n                console.log('Escape pressed in useEffect')\r\n                setOPD(false);\r\n            }\r\n        }\r\n\r\n        const handleMouseClick = (event) => {\r\n            // if the click wasnt on the products button\r\n            if (event.target.id !== \"produktai\") {\r\n                setOPD(false);\r\n            }\r\n        }\r\n        document.addEventListener('click', handleMouseClick);\r\n\r\n        document.addEventListener('keydown', handleKeyPress);\r\n    }, []); // end of React.useEffect()\r\n    // END OF HIDE-SHOW DROPDOWNS\r\n    ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <header style={{ display: 'block' }}>\r\n                <ul id=\"header-list\">\r\n                    <ProductsMenu id=\"produktai\" className=\"header-item-onhover\" />\r\n\r\n                    <Link className=\"header-item-onhover\" to={\"/\" + props.language + \"/interior\"}>\r\n                        {props.language === \"LT\" ? \"INTERJERUI\"\r\n                            : props.language === \"EN\" && \"INTERIOR\"}\r\n                    </Link>\r\n\r\n                    <div className=\"header-img-onhover\" style={{ transition: '0.5s all' }}>\r\n                        <Link to={\"/\" + props.language}>\r\n                            <div id=\"header-logo-center\">\r\n                                <div></div>\r\n                                <div>\r\n                                    <img id=\"header-logo\" alt=\"header-logo\" style={{ height: \"70%\", width: \"60%\", transform: 'scale(0.75)' }} src={logo} />\r\n                                </div>\r\n                                <div></div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <Link className=\"header-item-onhover\" to={\"/\" + props.language + \"/manufacturers\"}>\r\n                        {props.language === \"LT\" ? \"GAMINTOJAI\" :\r\n                            props.language === \"EN\" && \"MANUFACTURERS\"}\r\n\r\n                    </Link>\r\n\r\n                    <Link className=\"header-item-onhover\" to={\"/\" + props.language + \"/contacts\"}>\r\n                        {props.language === \"LT\" ? \"KONTAKTAI\" :\r\n                            props.language === \"EN\" && \"CONTACTS\"}\r\n                    </Link>\r\n                </ul>\r\n            </header>\r\n            {/* <DropdownMenu /> */}\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\MainContainer.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\AllProducts.component.js",["58","59","60","61","62"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default class AllProducts extends Component {\r\n        constructor(props) {\r\n                super(props);\r\n                this.state = { curProducts: [], fetchedProducts: [], loading: true };\r\n        }\r\n\r\n\r\n\r\n\r\n        componentDidMount() {\r\n                axios.get(\"http://localhost:5000/products/\")\r\n                        .then(response => {\r\n                                this.setState({ fetchedProducts: response.data, curProducts: response.data, loading: false });\r\n                        })\r\n                        .catch((error) => {\r\n                                console.log(error);\r\n                        })\r\n        }\r\n\r\n\r\n        filter(filteredArr) {\r\n                this.state.fetchedProducts.map(product => {\r\n                        if (product.manufacturer.toUpperCase() === this.props.match.params.manufacturer.toUpperCase()) {\r\n                                filteredArr.push(product)\r\n                        }\r\n                });\r\n\r\n                console.log(this)\r\n        }\r\n\r\n        asd(manufacturer) {\r\n                console.log(manufacturer);\r\n                this.setState({ curProducts: this.state.fetchedProducts.filter(product => product.manufacturer === manufacturer) })\r\n                console.log(this.state.fetchedProducts.filter(el => el == manufacturer))\r\n        }\r\n\r\n        findAllManufacturers(manufacturersArr) {\r\n                this.state.fetchedProducts.map(product => {\r\n                        var found = false;\r\n                        // sitam turi but filtruotas o ne fetched\r\n                        for (let i = 0; i < manufacturersArr.length; i++)\r\n                                if (manufacturersArr[i] === product.manufacturer) {\r\n                                        found = true;\r\n                                        break;\r\n                                }\r\n\r\n\r\n                        if (!found && product.manufacturer !== \"\")\r\n                                manufacturersArr.push(product.manufacturer)\r\n\r\n\r\n                });\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        findAllTypes(typesArr) {\r\n                this.state.fetchedProducts.map(product => {\r\n                        var found = false;\r\n                        // sitam turi but filtruotas o ne fetched\r\n                        for (let i = 0; i < typesArr.length; i++)\r\n                                if (typesArr[i].toUpperCase() === product.type.toUpperCase()) {\r\n                                        found = true;\r\n                                        break;\r\n                                }\r\n\r\n\r\n                        if (!found && product.type !== \"\")\r\n                                typesArr.push(product.type.toUpperCase());\r\n\r\n\r\n                });\r\n        }\r\n\r\n        render() {\r\n                var productsArr = [], manufacturersArr = [], typesArr = [], returnable = <div style={{ height: 'inherit', background: 'white' }}></div>;\r\n                console.log('123')\r\n                // only call functions if its loaded (if the data is fetched from the db)\r\n                if (!this.state.loading) {\r\n                        // jei konkretaus gamintojo page esu nefiltruoja kitu \r\n                        this.findAllTypes(typesArr);\r\n                        this.findAllManufacturers(manufacturersArr);\r\n\r\n                        if (this.props.match.params.manufacturer) {\r\n                                this.filter(productsArr)\r\n                        }\r\n                        else {\r\n\r\n                                productsArr = this.state.fetchedProducts;\r\n                        }\r\n\r\n                        returnable = <MainContainer this={this} manufacturersArr={manufacturersArr} typesArr={typesArr} lang={this.props.match.params.lang} productsArr={this.state.curProducts} />;\r\n\r\n                }\r\n\r\n                return returnable;\r\n        }\r\n}\r\n\r\nconst MainContainer = (props) => {\r\n        const language = useLocation().pathname[1] + useLocation().pathname[2];\r\n\r\n\r\n        return (\r\n\r\n                < div style={{ background: 'white', display: 'grid', minHeight: 'inherit', paddingBottom: '5rem', gridTemplateColumns: '25% 75%' }}>\r\n                        {/* sidebar */}\r\n                        <div >\r\n                                <ul id={\"products-sidebar\"}>\r\n                                        <div style={{ textAlign: 'center' }}>\r\n                                                <p className={\"sidebar-subtext\"}>{language === \"LT\" ? \"TIPAS\" : language === \"EN\" && \"TYPE\"}</p>\r\n                                                {props.typesArr.map(curType => {\r\n                                                        // jei keiciu sita returna  - keist ir apacioj\r\n                                                        return <Type this={props.this} type={curType} />\r\n                                                })}\r\n                                        </div>\r\n\r\n                                        {/*\r\n CIA NE TYPE o manufacturer turetu but arba sidebar-item\r\n*/}\r\n                                        <div style={{ marginTop: '3rem', textAlign: 'center' }}>\r\n                                                <p className={\"sidebar-subtext\"}>{language === \"LT\" ? \"GAMINTOJAI\" : language === \"EN\" && \"MANUFACTURERS\"}</p>\r\n                                                {props.manufacturersArr.map(curManufacturer => {\r\n                                                        // jei keiciu sita returna  - keist ir apacioj\r\n                                                        return <Type this={props.this} type={curManufacturer} />\r\n                                                })}\r\n                                        </div>\r\n\r\n\r\n                                </ul>\r\n                        </div>\r\n                        {/* products */}\r\n                        < div style={{ height: 'inherit', display: 'grid', minHeight: 'inherit', gridTemplateColumns: '33.3333% 33.3333% 33.3333%', marginRight: '5rem' }}>\r\n                                {props.productsArr.map(curProduct => {\r\n                                        return <Product type lang={props.lang} product={curProduct} />;\r\n                                })\r\n                                }\r\n                        </div>\r\n                </div >\r\n        );\r\n}\r\n\r\nconst Type = (props) => {\r\n        return (\r\n                <li classname={\"type-li\"} onClick={(e) => {\r\n                        e.target.classList.toggle(\"bold-text\");\r\n                        props.this.asd(props.type)\r\n                }} style={{ textAlign: 'right', listStyle: 'none' }}>\r\n                        <p style={{ fontSize: '1.15rem', }} className={\"product-type\"}>{props.type}</p>\r\n                </li>\r\n        );\r\n}\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n        // cia masyva padaryt kad vienakart kviestu fja o ji pereitu per visus bmp jpg tt. jei rado -break\r\n        function imageExists(imageurl) {\r\n                var http = new XMLHttpRequest();\r\n\r\n                http.open('HEAD', imageurl, false);\r\n                http.send();\r\n\r\n                // dukart alertina kazkodel\r\n                // alert(http.status + imageurl)\r\n                return http.status !== 404;\r\n\r\n        }\r\n\r\n        var path = \"/images/products/\" + props.product.name + '/' + props.product.imagename;\r\n\r\n        return (\r\n                <Link key={props.product.productCode + props.product.name}\r\n                        to={\"/\" + props.lang + \"/products/\" + props.product.mainCategory + \"/\" + props.product.subCategory + '/' + props.product.type + \"/\" + props.product.manufacturer + \"/\" + props.product.productCode + \"/\" + props.product._id + \"/\" + props.product.name + \"/\" + props.product.color}\r\n                >\r\n                        <div className={\"product-container\"} style={{ textAlign: 'center' }}>\r\n                                {/* cant use <picture> because browser support is bad and some customers definitely use IE or opera mini */}\r\n                                {\r\n\r\n                                        imageExists(path + \".jpg\") ? <img width={400} height={300} src={path + \".jpg\"} alt=\"logo\" />\r\n                                                :\r\n                                                imageExists(path + \".png\") ? <img width={400} height={300} src={path + '.png'} alt=\"logo\" />\r\n                                                        :\r\n                                                        imageExists(path + \".jpeg\") ? <img width={400} height={300} src={path + '.jpeg'} alt=\"logo\" />\r\n                                                                :\r\n                                                                imageExists(path + \".svg\") ? <img width={400} height={300} src={path + '.svg'} alt=\"logo\" />\r\n                                                                        :\r\n                                                                        imageExists(path + \".bmp\") ? <img width={400} height={300} src={path+ '.bmp'} alt=\"logo\" />\r\n                                                                                :\r\n\r\n                                                                                <img width={400} height={300} src={\"/images/no_image.png\"} alt=\"no image\" />\r\n                                }\r\n\r\n\r\n\r\n\r\n                                <p className={\"product-name\"}>{props.product.name}</p>\r\n                        </div>\r\n                </Link>\r\n        );\r\n}","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\ProductPage.component.js",["63","64"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass ProductPage extends Component {\r\n        constructor(props) {\r\n                super(props)\r\n                this.state = {\r\n                        imageName: undefined,\r\n                        loading: true\r\n                }\r\n        }\r\n\r\n\r\n        componentDidMount() {\r\n                axios.get('http://localhost:5000/products/' + this.props.match.params.productid)\r\n                        .then(response => {\r\n                                this.setState({\r\n                                        imageName: response.data.imagename,\r\n                                        loading: false\r\n                                },\r\n                                        console.log(response.data.imageName))\r\n                        })\r\n        }\r\n\r\n        imageExists(imageurl) {\r\n                var http = new XMLHttpRequest();\r\n\r\n                http.open('HEAD', imageurl, false);\r\n                http.send();\r\n                console.log(imageurl)\r\n                // dukart alertina kazkodel\r\n                // alert(imageurl)\r\n                // alert(http.status + imageurl)\r\n                return http.status !== 404;\r\n\r\n        }\r\n\r\n        render() {\r\n                var linkWithoutSpaces = this.props.match.params.name.replace(/\\s/g, ''),\r\n                        path = \"/images/products/\" + this.props.match.params.name + '/' + this.state.imageName;\r\n\r\n\r\n                if (this.state.loading)\r\n                        return <div style={{ height: 'inherit' }}></div>\r\n                else\r\n                        return (\r\n                                <div style={{ height: 'inherit' }} >\r\n                                        {/* {!this.state.loading && <img src={\"/images/products/\" + linkWithoutSpaces + '/' + this.state.imageName + '.png'} alt=\"nx\" />} */}\r\n                                        { this.props.match.params.name}\r\n                                        {console.log(path + \".png\")}\r\n\r\n                                        {\r\n\r\n                                                this.imageExists(path + \".jpg\") ? <img width={400} height={300} src={path + \".jpg\"} alt=\"logo\" />\r\n                                                        :\r\n                                                        this.imageExists(path + \".png\") ? <img width={400} height={300} src={path + '.png'} alt=\"logo\" />\r\n                                                                :\r\n                                                                this.imageExists(path + \".jpeg\") ? <img width={400} height={300} src={path + '.jpeg'} alt=\"logo\" />\r\n                                                                        :\r\n                                                                        this.imageExists(path + \".svg\") ? <img width={400} height={300} src={path + '.svg'} alt=\"logo\" />\r\n                                                                                :\r\n                                                                                this.imageExists(path + \".bmp\") ? <img width={400} height={300} src={path + '.bmp'} alt=\"logo\" />\r\n                                                                                        :\r\n\r\n                                                                                        <img width={400} height={300} src={\"/images/no_image.png\"} alt=\"no image\" />\r\n                                        }\r\n\r\n\r\n                                </div >\r\n                        );\r\n        }\r\n}\r\n\r\nexport default ProductPage;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":25,"column":48,"nodeType":"71","messageId":"72","endLine":25,"endColumn":50},{"ruleId":"73","severity":1,"message":"74","line":56,"column":98,"nodeType":"75","endLine":56,"endColumn":149},{"ruleId":"69","severity":1,"message":"70","line":27,"column":56,"nodeType":"71","messageId":"72","endLine":27,"endColumn":58},{"ruleId":"76","severity":1,"message":"77","line":39,"column":72,"nodeType":"78","messageId":"79","endLine":39,"endColumn":74},{"ruleId":"69","severity":1,"message":"70","line":43,"column":56,"nodeType":"71","messageId":"72","endLine":43,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":66,"column":56,"nodeType":"71","messageId":"72","endLine":66,"endColumn":58},{"ruleId":"80","severity":1,"message":"81","line":199,"column":81,"nodeType":"82","endLine":199,"endColumn":157},{"ruleId":"83","severity":1,"message":"84","line":41,"column":21,"nodeType":"85","messageId":"86","endLine":41,"endColumn":38},{"ruleId":"80","severity":1,"message":"81","line":67,"column":89,"nodeType":"82","endLine":67,"endColumn":165},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'linkWithoutSpaces' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]