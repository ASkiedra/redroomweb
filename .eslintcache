[{"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\index.js":"1","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\App.js":"2","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Footer.component.js":"3","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\BcAndLanguages.component.js":"4","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Routes.component.js":"5","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Manufacturers.component.js":"6","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Contacts.component.js":"7","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Interior.component.js":"8","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Header.component.js":"9","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\MainContainer.component.js":"10","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\AllProducts.component.js":"11","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\ProductPage.component.js":"12"},{"size":197,"mtime":1611487657597,"results":"13","hashOfConfig":"14"},{"size":866,"mtime":1611782661968,"results":"15","hashOfConfig":"14"},{"size":1792,"mtime":1611858019126,"results":"16","hashOfConfig":"14"},{"size":6266,"mtime":1611858019124,"results":"17","hashOfConfig":"14"},{"size":2747,"mtime":1611782445255,"results":"18","hashOfConfig":"14"},{"size":2214,"mtime":1611783712614,"results":"19","hashOfConfig":"14"},{"size":1141,"mtime":1611858019125,"results":"20","hashOfConfig":"14"},{"size":220,"mtime":1611487585942,"results":"21","hashOfConfig":"14"},{"size":10213,"mtime":1611863992566,"results":"22","hashOfConfig":"14"},{"size":798,"mtime":1611848892327,"results":"23","hashOfConfig":"14"},{"size":9994,"mtime":1611847625587,"results":"24","hashOfConfig":"14"},{"size":6161,"mtime":1611847432297,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"grcwhv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\index.js",[],["54","55"],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\App.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Footer.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\BcAndLanguages.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Routes.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Manufacturers.component.js",["56"],"import { Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Gamintojai extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { fetchedProducts: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(\"http://localhost:5000/products/\")\r\n            .then(response => {\r\n                this.setState({ fetchedProducts: response.data, loading: false });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    filter(manufacturers) {\r\n\r\n        this.state.fetchedProducts.map(product => {\r\n            var found = false;\r\n            // sitam turi but filtruotas o ne fetched\r\n            for (let i = 0; i < manufacturers.length; i++)\r\n                if (manufacturers[i] === product.manufacturer) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n\r\n\r\n            if (!found && product.manufacturer !== \"\")\r\n                manufacturers.push(product.manufacturer)\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var manufacturers = [];\r\n\r\n        if (!this.state.loading) {\r\n            this.filter(manufacturers);\r\n\r\n        }\r\n        return <GamintojaiContainer language={this.props.match.params.lang} filteredManufacturers={manufacturers} />\r\n\r\n    }\r\n}\r\n\r\nconst GamintojaiContainer = (props) => {\r\n    return (\r\n        <div style={{ height: 'inherit' }}>\r\n            <div id='gamintoju-grid' style={{ paddingBottom: '5rem' }}>\r\n                {props.filteredManufacturers.map(manufacturer => {\r\n                    return (\r\n                        <div key={manufacturer}>\r\n                            <Link to={\"/\" + props.language + \"/products/null/null/null/\" + manufacturer}>\r\n                                {/* pritaikyt ta komponenta kur tikrina ar jpg ar bmp ar png ir tt */}\r\n                                <img alt={manufacturer + \"-logo\"} src={\"/images/logos/\" + manufacturer + \".png\"} />\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Contacts.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Interior.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\Header.component.js",["57"],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\MainContainer.component.js",[],"D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\AllProducts.component.js",["58","59","60"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default class AllProducts extends Component {\r\n        constructor(props) {\r\n                super(props);\r\n                this.state = { curProducts: [], fetchedProducts: [], loading: true };\r\n        }\r\n\r\n\r\n        componentDidMount() {\r\n                axios.get(\"http://localhost:5000/products/\")\r\n                        .then(response => {\r\n                                this.setState({ fetchedProducts: response.data, curProducts: response.data, loading: false });\r\n                        })\r\n                        .catch((error) => {\r\n                                console.log(error);\r\n                        })\r\n        }\r\n\r\n\r\n        filter(filteredArr) {\r\n                this.state.fetchedProducts.map(product => {\r\n                        if (product.manufacturer.toUpperCase() === this.props.match.params.manufacturer.toUpperCase()) {\r\n                                filteredArr.push(product)\r\n                        }\r\n                });\r\n\r\n                console.log(this)\r\n        }\r\n\r\n        asd(manufacturer) {\r\n                console.log(manufacturer);\r\n                this.setState({ curProducts: this.state.fetchedProducts.filter(product => product.manufacturer === manufacturer) })\r\n                console.log(this.state.fetchedProducts.filter(el => el === manufacturer))\r\n        }\r\n\r\n\r\n        findAllManufacturers(manufacturersArr) {\r\n                this.state.fetchedProducts.map(product => {\r\n                        var found = false;\r\n                        // sitam turi but filtruotas o ne fetched\r\n                        for (let i = 0; i < manufacturersArr.length; i++)\r\n                                if (manufacturersArr[i] === product.manufacturer) {\r\n                                        found = true;\r\n                                        break;\r\n                                }\r\n\r\n\r\n                        if (!found && product.manufacturer !== \"\")\r\n                                manufacturersArr.push(product.manufacturer)\r\n\r\n\r\n                });\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        findAllTypes(typesArr) {\r\n                this.state.fetchedProducts.map(product => {\r\n                        var found = false;\r\n                        // sitam turi but filtruotas o ne fetched\r\n                        for (let i = 0; i < typesArr.length; i++)\r\n                                if (typesArr[i].toUpperCase() === product.type.toUpperCase()) {\r\n                                        found = true;\r\n                                        break;\r\n                                }\r\n\r\n\r\n                        if (!found && product.type !== \"\")\r\n                                typesArr.push(product.type.toUpperCase());\r\n\r\n\r\n                });\r\n        }\r\n\r\n        render() {\r\n                var productsArr = [], manufacturersArr = [], typesArr = [], returnable = <div style={{ height: 'inherit', background: 'white' }}></div>;\r\n                // only call functions if its loaded (if the data is fetched from the db)\r\n                if (!this.state.loading) {\r\n                        // jei konkretaus gamintojo page esu nefiltruoja kitu \r\n                        this.findAllTypes(typesArr);\r\n                        this.findAllManufacturers(manufacturersArr);\r\n\r\n                        if (this.props.match.params.manufacturer !== undefined) {\r\n                                this.filter(productsArr)\r\n                        }\r\n                        else {\r\n\r\n                                productsArr = this.state.fetchedProducts;\r\n                        }\r\n\r\n                        returnable = <MainContainer this={this} manufacturersArr={manufacturersArr} typesArr={typesArr} lang={this.props.match.params.lang} productsArr={this.state.curProducts} />;\r\n\r\n                }\r\n                console.log(productsArr)\r\n\r\n                return returnable;\r\n        }\r\n}\r\n\r\nconst MainContainer = (props) => {\r\n        const language = useLocation().pathname[1] + useLocation().pathname[2];\r\n\r\n\r\n        return (\r\n\r\n                < div style={{ background: 'white', display: 'grid', minHeight: 'inherit', paddingBottom: '5rem', gridTemplateColumns: '25% 75%' }}>\r\n                        {/* sidebar */}\r\n                        <div >\r\n                                <ul id={\"products-sidebar\"}>\r\n                                        <div style={{ textAlign: 'center' }}>\r\n                                                <p className={\"sidebar-subtext\"}>{language === \"LT\" ? \"TIPAS\" : language === \"EN\" && \"TYPE\"}</p>\r\n                                                {props.typesArr.map(curType => {\r\n                                                        // jei keiciu sita returna  - keist ir apacioj\r\n                                                        return <Type this={props.this} type={curType} />\r\n                                                })}\r\n                                        </div>\r\n\r\n                                        {/*\r\n CIA NE TYPE o manufacturer turetu but arba sidebar-item\r\n*/}\r\n                                        <div style={{ marginTop: '3rem', textAlign: 'center' }}>\r\n                                                <p className={\"sidebar-subtext\"}>{language === \"LT\" ? \"GAMINTOJAI\" : language === \"EN\" && \"MANUFACTURERS\"}</p>\r\n                                                {props.manufacturersArr.map(curManufacturer => {\r\n                                                        // jei keiciu sita returna  - keist ir apacioj\r\n                                                        return <Type this={props.this} type={curManufacturer} />\r\n                                                })}\r\n                                        </div>\r\n\r\n\r\n                                </ul>\r\n                        </div>\r\n                        {/* products */}\r\n                        < div style={{ height: 'inherit', display: 'grid', minHeight: 'inherit', gridTemplateColumns: '33.3333% 33.3333% 33.3333%', marginRight: '5rem' }}>\r\n                                {props.productsArr.map(curProduct => {\r\n                                        return <Product type lang={props.lang} product={curProduct} />;\r\n                                })\r\n                                }\r\n                        </div>\r\n                </div >\r\n        );\r\n}\r\n\r\nconst Type = (props) => {\r\n        return (\r\n                <li classname={\"type-li\"} onClick={(e) => {\r\n                        e.target.classList.toggle(\"bold-text\");\r\n                        props.this.asd(props.type)\r\n                }} style={{ textAlign: 'right', listStyle: 'none' }}>\r\n                        <p style={{ fontSize: '1.15rem', }} className={\"product-type\"}>{props.type}</p>\r\n                </li>\r\n        );\r\n}\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n        // cia masyva padaryt kad vienakart kviestu fja o ji pereitu per visus bmp jpg tt. jei rado -break\r\n        function imageExists(imageurl) {\r\n                var http = new XMLHttpRequest();\r\n\r\n                http.open('HEAD', imageurl, false);\r\n                http.send();\r\n\r\n                if (http.status !== 200)\r\n                        console.log(imageurl)\r\n                // dukart alertina kazkodel\r\n                return http.status !== 404;\r\n\r\n        }\r\n\r\n        var path = \"/images/products/\" + props.product.manufacturer + '/' + props.product.name + '/' + props.product.imageName[0];\r\n\r\n        return (\r\n                <Link key={props.product.productCode + props.product.name}\r\n                        style={{ height: '20rem', width: '100%' }}\r\n                        to={{\r\n                                pathname: \"/\" + props.lang + \"/products/\" + props.product.mainCategory + \"/\" + props.product.subCategory + '/' + props.product.type + \"/\" + props.product.manufacturer + \"/\" + props.product.productCode + \"/\" + props.product._id + \"/\" + props.product.name + \"/\" + props.product.color,\r\n                                product: props.product,\r\n                        }}>\r\n                        <div className={\"product-container\"} style={{ height: 'inherit', width: 'inherit', textAlign: 'center' }}>\r\n                                {/* cant use <picture> because browser support is bad and some customers definitely use IE or opera mini */}\r\n                                {\r\n\r\n                                        imageExists(path + \".jpg\") ? <img className=\"product-list-photo\" src={path + \".jpg\"} alt=\"logo\" />\r\n                                                :\r\n                                                imageExists(path + \".png\") ? <img className=\"product-list-photo\" src={path + '.png'} alt=\"logo\" />\r\n                                                        :\r\n                                                        imageExists(path + \".jpeg\") ? <img className=\"product-list-photo\" src={path + '.jpeg'} alt=\"logo\" />\r\n                                                                :\r\n                                                                imageExists(path + \".svg\") ? <img className=\"product-list-photo\" src={path + '.svg'} alt=\"logo\" />\r\n                                                                        :\r\n                                                                        imageExists(path + \".bmp\") ? <img className=\"product-list-photo\" src={path + '.bmp'} alt=\"logo\" />\r\n                                                                                :\r\n\r\n                                                                                <img className=\"product-list-photo\" src={\"/images/no_image.png\"} alt=\"not-found\" />\r\n                                }\r\n\r\n\r\n\r\n\r\n                                <p className={\"product-name\"}><b>{props.product.manufacturer} </b>{props.product.name}</p>\r\n                        </div>\r\n                </Link>\r\n        );\r\n}","D:\\Programavimas\\Projektai\\senas\\redroomweb\\src\\components\\ProductPage.component.js",["61","62","63","64"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass ProductPage extends Component {\r\n        constructor(props) {\r\n                super(props)\r\n\r\n                this.state = {\r\n                        imageName: ['none'],\r\n                        info: [],\r\n                        path: undefined,\r\n                        loading: true\r\n                }\r\n        }\r\n\r\n\r\n        componentDidMount() {\r\n                if (this.props.location.product) {\r\n                        // console.log('cache exists, no data from the database is necessary')\r\n                        this.setState(\r\n                                {\r\n                                        imageName: this.props.location.product.imageName,\r\n                                        info: this.props.location.product.info,\r\n                                        path: \"/images/products/\" + this.props.location.product.manufacturer + '/' + this.props.location.product.name + '/',\r\n                                },\r\n                                this.setState({\r\n                                        loading:false,\r\n                                })\r\n                        );\r\n                }\r\n                else {\r\n                        // console.log('no cache is present, therefore we get data from the database');\r\n                        axios.get('http://localhost:5000/products/' + this.props.match.params.productid)\r\n                                .then(response => {\r\n                                        this.setState({\r\n                                                imageName: response.data.imageName,\r\n                                                info: response.data.info,\r\n                                                path: \"/images/products/\" + this.props.match.params.manufacturer + '/' + this.props.match.params.name + '/',\r\n\r\n                                        },\r\n                                                this.setState({\r\n                                                        loading: false,\r\n                                                })\r\n                                        )\r\n                                }\r\n                                )\r\n                }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        imageExists(imageurl) {\r\n                var http = new XMLHttpRequest();\r\n\r\n                http.open('HEAD', imageurl, false);\r\n                http.send();\r\n                // dukart alertina kazkodel\r\n                // alert(imageurl)\r\n                if (http.status !== 200)\r\n                console.log(imageurl)\r\n                // alert(http.status + imageurl)\r\n                return http.status !== 404;\r\n\r\n        }\r\n\r\n        render() {\r\n                var i = 0;\r\n                return (\r\n                        <div style={{ height: 'inherit' }} >\r\n                                {!this.state.loading &&\r\n                                // async causes problems because imageNames array takes too long to load\r\n                                        this.state.imageName[0] !== 'none' &&\r\n                                        <div>\r\n                                                {console.log(this.state.imageName)}\r\n                                                {console.log(this.state.path + this.state.imageName[0] + \".jpg\")}\r\n                                                <p>{this.props.match.params.lang === \"LT\" ? this.state.info[0] : this.props.match.params.lang === \"EN\" && this.state.info[1]}</p>\r\n\r\n                                                {this.imageExists(this.state.path + this.state.imageName[0] + \".jpg\") ? <img width={400} height={300} src={this.state.path + this.state.imageName[0] + \".jpg\"} style={{fontSize: '0'}}alt=\"logo\" /> // sometimes the alt loads before the image so font size 0 hides it\r\n                                                        :\r\n                                                        this.imageExists(this.state.path + this.state.imageName[0] + \".png\") ? <img width={400} height={300} src={this.state.path + this.state.imageName[0] + '.png'} alt=\"logo\" />\r\n                                                                :\r\n                                                                this.imageExists(this.state.path + this.state.imageName[0] + \".jpeg\") ? <img width={400} height={300} src={this.state.path + this.state.imageName[0] + '.jpeg'} alt=\"logo\" />\r\n                                                                        :\r\n                                                                        this.imageExists(this.state.path + this.state.imageName[0] + \".svg\") ? <img width={400} height={300} src={this.state.path + this.state.imageName[0] + '.svg'} alt=\"logo\" />\r\n                                                                                :\r\n                                                                                this.imageExists(this.state.path + this.state.imageName[0] + \".bmp\") ? <img width={400} height={300} src={this.state.path + this.state.imageName[0] + '.bmp'} alt=\"logo\" />\r\n                                                                                        :\r\n\r\n                                                                                        <img width={400} height={300} src={\"/images/no_image.png\"} alt=\"no image\" />}\r\n\r\n\r\n                                        </div>\r\n                                }\r\n\r\n                                {\r\n                                        // at least 2 product images defined in the databse\r\n                                        this.state.imageName.length > 1 &&\r\n                                        this.state.imageName.map(product => {\r\n                                                i++;\r\n                                                if (this.state.imageName[i] != undefined)\r\n                                                        return <img src={this.state.path + this.state.imageName[i] + '.jpg'} />;\r\n                                        })\r\n\r\n                                }\r\n                        </div >\r\n                );\r\n        }\r\n}\r\n\r\nexport default ProductPage;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":25,"column":48,"nodeType":"71","messageId":"72","endLine":25,"endColumn":50},{"ruleId":"73","severity":1,"message":"74","line":4,"column":11,"nodeType":"75","messageId":"76","endLine":4,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":25,"column":56,"nodeType":"71","messageId":"72","endLine":25,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":42,"column":56,"nodeType":"71","messageId":"72","endLine":42,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":65,"column":56,"nodeType":"71","messageId":"72","endLine":65,"endColumn":58},{"ruleId":"77","severity":1,"message":"78","line":94,"column":89,"nodeType":"79","endLine":94,"endColumn":165},{"ruleId":"69","severity":1,"message":"80","line":103,"column":74,"nodeType":"71","messageId":"81","endLine":103,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":105,"column":77,"nodeType":"84","messageId":"85","endLine":105,"endColumn":79},{"ruleId":"86","severity":1,"message":"87","line":106,"column":64,"nodeType":"79","endLine":106,"endColumn":128},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]